services:
  db:
    image: postgres:16-alpine
    container_name: cm_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_INTERNAL_PORT}"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d

  redis:
    image: redis:7-alpine
    container_name: cm_redis
    ports:
      - "${REDIS_PORT}:6379"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: cm_backend
    environment:
      NODE_ENV: development
      BACKEND_PORT: ${BACKEND_PORT}
      POSTGRES_HOST: db
      POSTGRES_PORT: ${POSTGRES_INTERNAL_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      VITE_CONTACT_UPDATES_CHANNEL: ${VITE_CONTACT_UPDATES_CHANNEL}
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - db
      - redis

  listener:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: cm_listener
    command: npm run listener
    environment:
      NODE_ENV: development
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      CONTACT_UPDATES_CHANNEL: contact-updates
    depends_on:
      - db
      - redis
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: cm_frontend
    environment:
      VITE_API_BASE_URL: "http://localhost:${BACKEND_PORT}"
      VITE_API_TIMEOUT: ${VITE_API_TIMEOUT}
      VITE_CONTACT_UPDATES_CHANNEL: ${VITE_CONTACT_UPDATES_CHANNEL}
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: ["npm","run","dev","--","--host"]
    depends_on:
      - backend

volumes:
  db_data:
